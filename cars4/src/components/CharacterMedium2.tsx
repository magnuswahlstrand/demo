/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import {useGLTF, useTexture} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        characterMedium: THREE.SkinnedMesh
        LeftFootCtrl: THREE.Bone
        RightFootCtrl: THREE.Bone
        HipsCtrl: THREE.Bone
    }
    materials: {
        skin: THREE.MeshStandardMaterial
    }
}

export function Model(props: JSX.IntrinsicElements['group']) {
    const {nodes, materials} = useGLTF('/models/characterMedium.gltf') as GLTFResult
    let texture = useTexture('models/animated-characters-2/Skins/skaterMaleA.png', (texture) => {
        if(typeof texture) {
            console.log(typeof texture)
            console.log('loaded')
            console.log(texture)
        }

    })
    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                <primitive object={nodes.LeftFootCtrl}/>
                <primitive object={nodes.RightFootCtrl}/>
                <primitive object={nodes.HipsCtrl}/>
            </group>
            <skinnedMesh
                geometry={nodes.characterMedium.geometry} material={materials.skin}
                material-map={texture}
                material-map-flipY={false}
                skeleton={nodes.characterMedium.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={100}/>
        </group>
    )
}

useGLTF.preload('/models/characterMedium.gltf')
