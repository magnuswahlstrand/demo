/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useRef, useState} from 'react'
import {Clone, useGLTF,} from '@react-three/drei'
import {dampS, highlightModel, unHighlightModel} from "../common/utils";
import {GroupProps, useFrame} from "@react-three/fiber";
import {Color, Group, Spherical} from "three";

interface props {
    flip: boolean
    binder: boolean
    color: Color
}

export default function Model(props: props & GroupProps) {
    const [clicked, setClicked] = useState(false);
    const [visible, setVisible] = useState(true);


    const group = useRef<Group>(null!)
    const {
        nodes,
        materials
    } = useGLTF('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/book/model.gltf')


    const flip = props.flip ? -1 : 1

    const from = new Spherical()
    const to = new Spherical()
    useFrame(({camera}, delta) => {
        if (!group.current || !clicked || !visible) return

        from.setFromVector3(group.current.position);
        to.setFromVector3(camera.position);
        const t = dampS(from, to, 0.1, delta, 3)

        group.current.position.setFromSpherical(from)

        group.current.position.distanceToSquared(camera.position) < 0.3 && setVisible(false)


        // const a = damp3(group.current.position, camera.position, 0.25, delta,3)
    })

    return (
        <group ref={group} {...props} dispose={null} rotation={[-Math.PI / 2, 0, flip * Math.PI / 2]}
               onPointerEnter={highlightModel}
               onPointerOut={unHighlightModel}
               onClick={(e) => {
                   setClicked(true)
                   e.stopPropagation()
               }}
               visible={visible}
        >
            <group position={[-0.123, 0, 0]}>
                <Clone object={nodes.Cube019} deep={'materialsOnly'} material-color={props.color}/>
                <Clone object={nodes.Cube019_1} inject={<meshStandardMaterial color="white"/>}/>
                {props.binder &&
                    <Clone object={nodes.Cube019_2} deep={'materialsOnly'} inject={materials['Metal.076']}/>}
            </group>

        </group>
    )
}

useGLTF.preload('https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/book/model.gltf')
