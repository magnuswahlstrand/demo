/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { Color, Group } from "three";
import { damp } from "maath/easing";


export default function Model(props) {
  const [hovered, setHovered] = useState(false);
  const group = useRef<Group>(null!);
  const {
    nodes,
    materials
  } = useGLTF("https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/crate/model.gltf");

  useEffect(() => {
    console.log(materials["BrownDark.057"].emissive);
    console.log(materials["BrownDark.057"]);
    materials["BrownDark.057"].emissive = new Color(0xf0f0f0);
    materials["Metal.089"].emissive = new Color(0xf0f0f0);

  }, []);

  useFrame((state, delta) => {
    group.current.rotation.y += 0.005;
     // = hovered ? 0.5 : 0
    damp(materials["BrownDark.057"],"emissiveIntensity", hovered ? 0.1 : 0, 0.15, delta);
    damp(materials["Metal.089"],"emissiveIntensity", hovered ? 0.1 : 0, 0.15, delta);
  });

  return (
    <group
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
      ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cube013.geometry} material={materials["BrownDark.057"]}/>
        <mesh geometry={nodes.Cube013_1.geometry} material={materials["Metal.089"]} />
      </group>

    </group>
  );
}

useGLTF.preload("https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/crate/model.gltf");
