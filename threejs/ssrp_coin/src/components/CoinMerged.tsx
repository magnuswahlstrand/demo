/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { useSpring, easings } from "@react-spring/core";
import { GLTF } from "three-stdlib";
import { a } from "@react-spring/three";


type GLTFResult = GLTF & {
  nodes: {
    Big: THREE.Mesh
    START_STAY_REPORT_PAY: THREE.Mesh
    Creeper: THREE.Mesh
  }
  materials: {
    ["Material.004"]: THREE.MeshPhysicalMaterial
    ["SVGMat.004"]: THREE.MeshStandardMaterial
  }
}

type GLTFResult2 = GLTF & {
  nodes: {
    Big003: THREE.Mesh
    START_STAY_REPORT_PAY003: THREE.Mesh
    Heart: THREE.Mesh
  }
  materials: {
    ["Material.003"]: THREE.MeshStandardMaterial
    ["SVGMat.007"]: THREE.MeshStandardMaterial
  }
}

const metalness = 0.95;
const roughness = 0.5;

// const color = "#FF57BC"
const color = "#EAFF22";

type CoinProps = JSX.IntrinsicElements["group"] & { color: string }

const colorSpringProps = {
  from: { color: "#FF57BC" },
  to: [{ color: "#EAFF22" }, { color: "#FF57BC" }],
  config: { easing: easings.easeInSine, tension: 100, friction: 100, mass: 100 },
  loop: true
};

export function Front(props: CoinProps) {
  const [{ color }] = useSpring(
    colorSpringProps,
    []
  );

  const { nodes, materials } = useGLTF("/ssrp_coin.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <a.mesh castShadow receiveShadow geometry={nodes.Big.geometry}
              material={nodes.Big.material}
              position={[0, 0.5, 0]}
              material-color={color}
              material-metalness={metalness}
              material-roughness={roughness}
      />
      <mesh castShadow receiveShadow geometry={nodes.START_STAY_REPORT_PAY.geometry}
            material={materials["Material.004"]} position={[0, 1.19, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Creeper.geometry} material={materials["SVGMat.004"]}
            position={[0.29, 0.91, -0.57]} scale={[500, 0.8, 500]} />
    </group>
  );
}


export function Back(props: CoinProps) {
  const [{ color }] = useSpring(
    colorSpringProps,
    []
  );


  const { nodes, materials } = useGLTF("/ssrp_coin_back.glb") as GLTFResult2;
  return (
    <group {...props} dispose={null}>
      <a.mesh castShadow receiveShadow geometry={nodes.Big003.geometry} material={nodes.Big003.material}
            position={[-0.08, 0.5, 0]}
            material-color={color}
            material-metalness={metalness}
            material-roughness={roughness}
        // material-emissive={"white"} material-emissiveIntensity={0.05}
      />
      <mesh castShadow receiveShadow geometry={nodes.START_STAY_REPORT_PAY003.geometry}
            material={materials["Material.003"]} position={[-0.08, 1.19, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Heart.geometry} material={materials["SVGMat.007"]}
            position={[-4.89, 0.9, 5.34]} scale={[290, 0.67, 290]} />
    </group>
  );
}

useGLTF.preload("/ssrp_coin.glb");
useGLTF.preload("/ssrp_coin_back.glb");
